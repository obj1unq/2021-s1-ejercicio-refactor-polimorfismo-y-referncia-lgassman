import polimorfismo.*
test "hotel comun reserva ok" {
	 	
	hotel.estrellas(2)
	hotel.camasDisponibles(50)
	hotel.spaDisponible(false)
	
	paquete.servicioOfrecido(hotel)
	paquete.premium(false);
	paquete.cantidadPersonas(10)
	
	assert.that(paquete.sePuedeReservar())
	paquete.reservar()
	assert.that(paquete.estaReservado())
	assert.equals(40, hotel.camasDisponibles())
}
test "hotel comun no se puede reservar" {
	 
	hotel.configurar(2, 5, false)
	paquete.servicioOfrecido(hotel)
	paquete.premium(false);
	paquete.cantidadPersonas(10)
	
	assert.notThat(paquete.sePuedeReservar())
}

test "hotel premium reserva ok" {
	 
	hotel.configurar(5, 50, true)
	paquete.servicioOfrecido(hotel)
	paquete.premium(true);
	paquete.cantidadPersonas(10)
	
	assert.that(paquete.sePuedeReservar())
	paquete.reservar()
	assert.that(paquete.estaReservado())
	assert.equals(40, hotel.camasDisponibles())
	assert.notThat(hotel.spaDisponible())
}
test "hotel premium reserva no ok" {
	 
	hotel.configurar(5, 50, false)
	paquete.servicioOfrecido(hotel)
	paquete.premium(true);
	paquete.cantidadPersonas(10)
	
	assert.notThat(paquete.sePuedeReservar())
}

test "vehiculo comun reserva ok" {
	 
	 
	vehiculo.configurar(false, true, 15)
	paquete.servicioOfrecido(vehiculo)  
	paquete.premium(false);
	paquete.cantidadPersonas(10)
	
	assert.that(paquete.sePuedeReservar())
	paquete.reservar()
	assert.that(paquete.estaReservado())
	assert.equals(5, vehiculo.asientosDisponibles())
}

test "vehiculo comun reserva no ok" {
	 
	 
	vehiculo.configurar(false, true, 8)
	paquete.servicioOfrecido(vehiculo)  
	paquete.premium(false);
	paquete.cantidadPersonas(10)
	
	assert.notThat(paquete.sePuedeReservar())
}

test "vehiculo premium reserva ok" {
	 
	 
	vehiculo.configurar(true, true, 15)
	paquete.servicioOfrecido(vehiculo)  
	paquete.premium(true);
	paquete.cantidadPersonas(10)
	
	assert.that(paquete.sePuedeReservar())
	paquete.reservar()
	assert.that(paquete.estaReservado())
	assert.equals(5, vehiculo.asientosDisponibles())
}

test "vehiculo premium reserva no ok" {
	 	 
	vehiculo.configurar(false, true, 15) 
	paquete.servicioOfrecido(vehiculo) 
	paquete.premium(true);
	paquete.cantidadPersonas(10)
	
	assert.notThat(paquete.sePuedeReservar())
}


test "combinado comun reserva ok" {
	 
	 
	 //(_estrellas, _camas, _spaDisponible, _tieneAire, _tieneVtv, _asientosDisponibles) {
	servicioCombinado.configurar(2, 50, false, false, true, 15)
	paquete.servicioOfrecido(servicioCombinado)  	
	paquete.premium(false);
	paquete.cantidadPersonas(10)
	
	assert.that(paquete.sePuedeReservar())
	paquete.reservar()
	assert.that(paquete.estaReservado())
	assert.equals(5, servicioCombinado.asientosDisponibles())
	assert.equals(40, servicioCombinado.camasDisponibles())
	
}

test "combinado comun reserva no ok" {
	 
	 //(_estrellas, _camas, _spaDisponible, _tieneAire, _tieneVtv, _asientosDisponibles) {
	servicioCombinado.configurar(2, 50, false, false, true, 15)  
	paquete.servicioOfrecido(servicioCombinado)  	
	
	
	paquete.premium(false);
	paquete.cantidadPersonas(20)
	
	assert.notThat(paquete.sePuedeReservar())
}

test "combinado premium reserva ok" {
	 	 
	 //(_estrellas, _camas, _spaDisponible, _tieneAire, _tieneVtv, _asientosDisponibles) {
	servicioCombinado.configurar(5, 50, true, true, true, 15)  	
	paquete.servicioOfrecido(servicioCombinado)  	
	paquete.premium(true);
	paquete.cantidadPersonas(10)
	
	assert.that(paquete.sePuedeReservar())
	
	paquete.reservar()
	assert.that(paquete.estaReservado())
	assert.equals(5, servicioCombinado.asientosDisponibles())
	assert.equals(40, servicioCombinado.camasDisponibles())
	assert.notThat(servicioCombinado.spaDisponible())
	
}

test "combinado premium reserva no ok" {
	 
	 //(_estrellas, _camas, _spaDisponible, _tieneAire, _tieneVtv, _asientosDisponibles) {
	servicioCombinado.configurar(5, 50, true, false, true, 15)  	
	paquete.servicioOfrecido(servicioCombinado)  	
	
	paquete.premium(true);
	paquete.cantidadPersonas(10)
	
	assert.notThat(paquete.sePuedeReservar())
}

